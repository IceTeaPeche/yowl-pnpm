"use strict";(self.webpackChunkmy_project=self.webpackChunkmy_project||[]).push([[1092],{92029:(O,f,e)=>{e.r(f),e.d(f,{default:()=>Z});var a=e(53657),s=e(96125),T=e(82154),C=e(3404),j=e(69054),u=e(29776),P=e(70139),S=e(7139),G=e(55613),N=e(99283),K=e(6620),m=e(2669),M=e(50810),d=e(91845),p=e(34773),R=e(37367),A=e(45486),I=e(48814),L=e(51089),k=e(10434);const B=[{value:"text-davinci-003",label:"higher quality, longer output, better instruction following"},{value:"text-curie-001",label:"faster and lower cost, suited for Q&A, translation, service bot"}],E=()=>{const{formatMessage:z}=(0,T.Z)(),l=(0,u.useNotification)(),[D,i]=(0,s.useState)(!1),r=(0,s.useRef)(""),c=(0,s.useRef)("text-davinci-003"),x=(0,s.useRef)(2048),v=j.default.create({baseURL:"",headers:{Authorization:`Bearer ${u.auth.getToken()}`,"Content-Type":"application/json"}}),[o,g]=(0,s.useState)({apiKey:"",modelName:"text-davinci-003",maxTokens:2048}),y=t=>{g(t),r.current=t.apiKey,c.current=t.modelName,x.current=t.maxTokens},h=t=>n=>{switch(console.log("key",n),g(t==="modelName"?{...o,[t]:n}:{...o,[t]:n.target.value}),t){case"apiKey":r.current=n.target.value;break;case"modelName":c.current=n;break;case"maxTokens":x.current=n.target.value;break;default:break}};(0,s.useEffect)(()=>{i(!0),(async()=>{try{const{data:n}=await v.get("/strapi-chatgpt/config");y(n)}catch(n){console.log(n),l({type:"warning",message:{id:"chatgpt-config-fetch-error",defaultMessage:"Error while fetching the chatGPT configurations"}})}})(),i(!1)},[]);const H=async()=>{if(!{apiKey:r.current,modelName:c.current,maxTokens:x.current}.apiKey){l({type:"warning",message:{id:"chatgpt-config-api-key-required",defaultMessage:"Please enter the api key"}});return}i(!0);try{const{data:n}=await v.post("/strapi-chatgpt/config/update",{...o});n&&n.value&&y(JSON.parse(n.value)),i(!1),l({type:"success",message:{id:"chatgpt-config-save-success",defaultMessage:"ChatGPT configurations saved successfully"}})}catch(n){i(!1),console.log(n),l({type:"warning",message:{id:"chatgpt-config-save-error",defaultMessage:"Error while saving the chatGPT configurations"}})}};return(0,a.jsxs)(P.A,{children:[(0,a.jsx)(C.q,{title:"Strapi ChatGPT Configuration"}),(0,a.jsxs)(S.o,{"aria-busy":!1,children:[(0,a.jsx)(G.T,{title:"ChatGPT Configurations",subtitle:z({id:"chatgpt-config-headder",defaultMessage:"Configure the api key, model name and other parameters"}),primaryAction:(0,a.jsx)(N.z,{startIcon:(0,a.jsx)(k.Z,{}),onClick:H,loading:D,children:"Save"})}),(0,a.jsx)(K.D,{children:(0,a.jsxs)(m.x,{shadow:"tableShadow",background:"neutral0",paddingTop:6,paddingLeft:7,paddingRight:7,paddingBottom:6,hasRadius:!0,children:[(0,a.jsxs)(M.r,{gap:6,children:[(0,a.jsx)(d.P,{col:6,children:(0,a.jsx)(p.o,{type:"text",id:"apiKey",name:"apiKey",placeholder:"sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",label:"API Key",refs:r,value:o.apiKey,onChange:h("apiKey")})}),(0,a.jsx)(d.P,{col:6,children:(0,a.jsx)(p.o,{type:"text",id:"maxTokens",name:"maxTokens",label:"Max Tokens",placeholder:"2048",refs:x,value:o.maxTokens,onChange:h("maxTokens")})}),(0,a.jsx)(d.P,{children:(0,a.jsx)(R.P,{name:"modelName",id:"modelName",label:"Model Name",placeholder:"Select a model",refs:c,value:o.modelName,onChange:h("modelName"),children:B.map(t=>(0,a.jsxs)(A.W,{value:t.value,children:[t.value," - ",t.label]},t.value))})})]}),(0,a.jsx)(m.x,{paddingTop:5,children:(0,a.jsxs)(I.Z,{children:["You can set additional parameters"," (",(0,a.jsx)("span",{children:(0,a.jsx)(L.r,{href:"https://platform.openai.com/docs/api-reference/completions",target:"_blank",children:"ChatGPT doc"})}),") ","with the API Integration, available from Plugin > ChatGPT menu."]})})]})})]})]})},Z=()=>(0,a.jsx)(E,{})}}]);
